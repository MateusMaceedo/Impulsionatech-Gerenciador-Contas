// <auto-generated />
using System;
using ImpulsionaTech.Contas.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ImpulsionaTech.Contas.Infrastructure.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20220419022543_InitialMigrationV2")]
    partial class InitialMigrationV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ImpulsionaTech.Contas.Domain.Models.Clientes.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("ClienteId");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("TB_CLIENTES");
                });

            modelBuilder.Entity("ImpulsionaTech.Contas.Domain.Models.Contas.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TipoContaId")
                        .HasColumnType("integer");

                    b.HasKey("ContaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoContaId");

                    b.ToTable("TB_CONTAS");
                });

            modelBuilder.Entity("ImpulsionaTech.Contas.Domain.Models.MovimentacoesBancarias.MovimentacaoBancaria", b =>
                {
                    b.Property<int>("MovimentacaoBancariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TipoContaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoMovimentacao")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("MovimentacaoBancariaId");

                    b.ToTable("TB_MOVIMENTACAO_BANCARIA");
                });

            modelBuilder.Entity("ImpulsionaTech.Contas.Domain.Models.TiposConta.TipoConta", b =>
                {
                    b.Property<int>("TipoContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("TipoContaId");

                    b.ToTable("TB_TIPO_CONTAS");

                    b.HasData(
                        new
                        {
                            TipoContaId = 1,
                            Descricao = "Corrente",
                            Status = 0
                        },
                        new
                        {
                            TipoContaId = 2,
                            Descricao = "Salário",
                            Status = 0
                        },
                        new
                        {
                            TipoContaId = 3,
                            Descricao = "Poupança",
                            Status = 0
                        },
                        new
                        {
                            TipoContaId = 4,
                            Descricao = "Investimento",
                            Status = 0
                        });
                });

            modelBuilder.Entity("ImpulsionaTech.Contas.Domain.Models.Contas.Conta", b =>
                {
                    b.HasOne("ImpulsionaTech.Contas.Domain.Models.Clientes.Cliente", "Cliente")
                        .WithMany("Contas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImpulsionaTech.Contas.Domain.Models.TiposConta.TipoConta", "TipoConta")
                        .WithMany()
                        .HasForeignKey("TipoContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
